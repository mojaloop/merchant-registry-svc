import swaggerJSDoc from 'swagger-jsdoc'
import path from 'path'
import fs from 'fs'
import yaml from 'js-yaml'
import { cloneDeep } from 'lodash'

const ROUTE_PATH = path.join(__dirname, '../routes/**/*.ts')
const ENTITY_PATH = path.join(__dirname, '../entities/**/*.ts')

const options = {
  failOnErrors: true,
  definition: {
    openapi: '3.0.0',
    info: {
      title: 'Merchant Acquirer API',
      version: '0.1.0',
      // eslint-disable-next-line max-len
      description: 'Merchant Acquirer Backend'
    },
    servers: [
      {
        url: '/api/v1'
      }
    ],
    components: {
      securitySchemes: {
        Authorization: {
          type: 'http',
          scheme: 'bearer',
          bearerFormat: 'JWT',
          value: 'Bearer <JWT token here>'
        }
      }
    }
  },
  apis: [ROUTE_PATH, ENTITY_PATH]
}

const generatedSwagger = swaggerJSDoc(options)

export const openAPISpecification: any = cloneDeep(generatedSwagger)

const tagOrder = [
  'Health Check',
  'Portal Users',
  'Merchants',
  'Merchant Status',
  'Merchant Locations',
  'Countries',
  'Business Owners',
  'Contact Persons',
  'Exports / Imports',
  'Roles'
]

openAPISpecification.tags.sort((a: any, b: any) => {
  const indexA = tagOrder.indexOf(a.name)
  const indexB = tagOrder.indexOf(b.name)
  if (indexA === -1) return 1
  if (indexB === -1) return -1
  return indexA - indexB
})

const docsDir = path.join(__dirname, '../docs')
const filePath = path.join(docsDir, 'openapi-autogenerated.yaml')

if (!fs.existsSync(docsDir)) {
  fs.mkdirSync(docsDir, { recursive: true })
}

fs.writeFileSync(
  filePath,
  yaml.dump(openAPISpecification)
)
