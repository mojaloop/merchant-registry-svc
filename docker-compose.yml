version: '3.1'
services:

  acquirer-backend:
    build:
      context: .
      dockerfile: Dockerfile-acquirer-backend
    restart: unless-stopped
    command: ["npm", "run", "acquirer-backend:start"]
    ports:
      - "5555:5555"
    environment:
      - APP_URL=http://127.0.0.1:5555 # SendGrid Callback Email Verification URL
      - HOST=0.0.0.0
      - PORT=5555

      - DB_HOST=merchant-db
      - DB_PORT=3306
      - DB_USERNAME=root
      - DB_PASSWORD=password
      - DB_DATABASE=acquirer_db

      - S3_ENDPOINT=minio
      - S3_PORT=9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_MERCHANT_BUCKET_NAME=merchant-documents

      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest # TODO: change this in production
      - RABBITMQ_PASSWORD=guest # TODO: change this in production
      - RABBITMQ_QUEUE=acquirer_to_registry
      - RABBITMQ_REPLY_QUEUE=registry_reply_acquirer

      - RECAPTCHA_SECRET_KEY=reCAPTCHA_SECRET_KEY
      - RECAPTCHA_ENABLED=true

      - SENDGRID_API_KEY=SENDGRID_API_KEY
      - SENDER_EMAIL=test@email.com

    depends_on:
      - merchant-db
      - minio
      - rabbitmq

  acquirer-frontend:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile-acquirer-frontend
    environment:
      - VITE_HOST=0.0.0.0
      - VITE_PORT=5173
      - VITE_API_URL=http://127.0.0.0:5555/api/v1
      - VITE_RECAPTCHA_SITE_KEY=reCAPTCHA_SITE_KEY

    ports:
      - "5173:5173"

  registry-oracle:
    build:
      context: .
      dockerfile: Dockerfile-registry-oracle
    restart: unless-stopped
    ports:
      - 8888:8888
    environment:
      - HOST=0.0.0.0
      - PORT=8888

      - DB_HOST=merchant-db
      - DB_PORT=3306
      - DB_USERNAME=root
      - DB_PASSWORD=password
      - DB_DATABASE=registry_db

      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest # TODO: change this in production
      - RABBITMQ_PASSWORD=guest # TODO: change this in production
      - RABBITMQ_QUEUE=acquirer_to_registry
      - RABBITMQ_REPLY_QUEUE=registry_reply_acquirer

    depends_on:
      - merchant-db
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3.12.4-management-alpine
    restart: unless-stopped
    ports:
      - 5672:5672 
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest # TODO: change this in production
      - RABBITMQ_DEFAULT_PASS=guest # TODO: change this in production

  merchant-db:
    container_name: mysql-db
    image: mysql:8.0.33
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - 3306:3306
    volumes:
      - ./mysql-init-scripts:/docker-entrypoint-initdb.d

  minio:
    image: minio/minio:RELEASE.2023-07-21T21-12-44Z
    restart: unless-stopped
    volumes:
      - data:/data
    ports:
      - "9000:9000"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data

volumes:
  data:
